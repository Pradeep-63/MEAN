Q-What is middleware and its features ?
Ans:-Middleware gets executed after the server receives the request and before the controller actions send the response.In Express, middleware refers to a function that processes incoming HTTP requests and can perform various actions such as .modifying the request or response objects, invoking the next middleware function in the chain, or sending a response to the client.
• Middleware functions can be used to perform a variety of tasks, such as:
• Logging: Middleware can be used to log information about incoming requests and outgoing responses.
• Authentication: Middleware can be used to authenticate users, check if they are authorized to access
certain resources, and redirect them to login pages if necessary.
• Parsing: Middleware can be used to parse incoming request bodies, such as JSON, XML, or form data.
• Error handling: Middleware can be used to handle errors and exceptions that occur during the request/
response cycle.
• Middleware functions are added to an Express application using the app.use() method, and they are
executed in the order in which they are added to the middleware chain. This allows for modular and
flexible application design, as different middleware functions can be added or removed as needed.
Example:-
  1.Body Parsing Middleware:
  const bodyParser = require('body-parser');
  app.use(bodyParser.json()); // Parse JSON bodies
  2.Static File Middleware:
  app.use(express.static('public')); // Serve static files from the "public" directory
  3.Authentication Middleware:
  const authenticate = (req, res, next) => {
    if (req.isAuthenticated()) {
        return next();
     } else {
        res.redirect('/login');
     }
  };
  app.use('/protectedRoute', authenticate);


Q-What is routing in express.js ?
Ans:-Routing refers to determining how an application responds to a client request to a particular endpoint, which is a URI (or path) and a specific HTTP request method (GET, POST, and so on).Each route can have one or more handler functions, which are executed when the route is matched.
Syntax:app.METHOD(PATH, HANDLER) 
       Where:
            app is an instance of express.
            METHOD is an HTTP request method, in lowercase.
            PATH is a path on the server.
            HANDLER is the function executed when the route is matched.
Example: 
      //GET ROUTE
       app.get('/', (req, res) => {
       res.send('Hello World!')
       })
       // POST ROUTE
       app.post('/submit-form', (req, res) => {
       const { name, email } = req.body;
       // Handle the form data (e.g., save to database)
       console.log(`Name: ${name}, Email: ${email}`);
       // Send a response back to the client
       res.send(`Form submitted! Name: ${name}, Email: ${email}`);
    });
